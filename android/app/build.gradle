plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    // id 'com.google.gms.google-services' version '4.3.15' apply false
    //  id("com.google.gms.google-services") version "4.4.2" apply false
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.fernando.flu_go_jwt"
    compileSdk = 35
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.fernando.flu_go_jwt"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        
        //minSdk = flutter.minSdkVersion
        // minSdk = 23
        minSdk = 24
        
        //targetSdk = flutter.targetSdkVersion
        targetSdk = 34
        
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        // como agregar release
        // usa variables de entorno?
        // password release la ultima opcion o mantener android?
        /* debug {
            keyAlias 'upload'
            keyPassword 'android'
            storeFile file('go-flu-jwt-key.jks')
            storePassword 'android'
        } */
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    
    buildTypes {
        debug {
            //signingConfig signingConfigs.debug
        }
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.release
        }
    }

    // *  Add flavors
    flavorDimensions "default"
    productFlavors {
        dev {
            //resValue "string", "app_name", "App-dev"
            resValue "string", "app_name", "App dev"
            applicationIdSuffix ".dev"
        }
        prod {
            resValue "string", "app_name", "NewAthletic"
            // no hay necesidad poner un sufijo para produccion
            //applicationIdSuffix ""
            // envs 
            resValue "string", "google_maps_key", ""
            // faltaria los links de live 
            resValue "string", "branchio_link", ""
            resValue "string", "branchio_alternative_link", ""
            // example: key_live_XXX, no lo encuentro de momento
            resValue "string", "branchio_key", ""
            // example: key_test_XXX
            resValue "string", "branchio_key_test", ""
            // testmode
            resValue "string", "branchio_test_mode", ""

        }
    }
    // * -------------------------
}
//added
dependencies {
    implementation 'com.google.android.gms:play-services-auth:20.4.1'
}

flutter {
    source = "../.."
}
